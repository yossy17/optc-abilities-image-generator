//color
$primary: #f6f3e8;
$secondary: #404040;

$red: #fa8072;
$green: #90ee90;
$blue: #87cefa;
$yellow: #ffd700;
$purple: #da70d6;

$red-hover: darken($red, 10%);
$green-hover: darken($green, 10%);
$blue-hover: darken($blue, 10%);
$yellow-hover: darken($yellow, 10%);
$purple-hover: darken($purple, 10%);

body {
  background: $secondary;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
span {
  color: $primary;
}

button,
option {
  color: $secondary;
}

// ----------------------------------------------------------------------------------------------------

// breakpoint
$breakpoints: (
  "sm": "screen and (min-width: 640px)",
  "md": "screen and (min-width: 768px)",
  "lg": "screen and (min-width: 1024px)",
  "xl": "screen and (min-width: 1280px)",
  "xxl": "screen and (min-width: 1536px)",
) !default;
@mixin mq($breakpoint) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}

// ----------------------------------------------------------------------------------------------------

// hover
@mixin hover {
  //PCのみhover要素を当てる
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      @content;
    }
  }
  //IE11対応用
  @media (-ms-high-contrast: none), (-ms-high-contrast: active) {
    &:hover {
      @content;
    }
  }
}

// ----------------------------------------------------------------------------------------------------

// font-size px to rem
$baseFontSize: 16;
@function rem($pixels) {
  @return $pixels / $baseFontSize * 1rem;
}

// @mixin rem($size) {
//   font-size: $size + px;
//   font-size: ($size / 16) + rem;
// }
// li {
//   @include rem(15);
// }
